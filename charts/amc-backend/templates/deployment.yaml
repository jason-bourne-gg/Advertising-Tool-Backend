apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "amc-backend.fullname" . }}
  labels:
    {{- include "amc-backend.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "amc-backend.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "amc-backend.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      initContainers:
        - name: fs-file-max
          image: busybox
          command:
            - sh
            - -c
            - sysctl -w fs.file-max=65535
          securityContext:
            privileged: true
        - name: tcp-keepalive-time
          image: busybox
          command:
            - sh
            - -c
            - sysctl -w net.ipv4.tcp_keepalive_time=60
          securityContext:
            privileged: true
        - name: tcp-keepalive-intvl
          image: busybox
          command:
            - sh
            - -c
            - sysctl -w net.ipv4.tcp_keepalive_intvl=10
          securityContext:
            privileged: true
        - name: tcp-keepalive-probes
          image: busybox
          command:
            - sh
            - -c
            - sysctl -w net.ipv4.tcp_keepalive_probes=5
          securityContext:
            privileged: true
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.containerPort }}
              protocol: TCP
          volumeMounts:
          - name: secrets-store-inline
            mountPath: "/mnt/secrets-store"
            readOnly: true
          env:
            - name: ENV
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-env
            - name: FLASK_APP
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-flask-app
            - name: REDIRECT_URI
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-redirect-uri
            - name: ORG_URL
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-org-url
            - name: APPLICATION_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-application-client-id
            - name: APPLICATION_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-application-secret-key
            - name: OKTA_REDIRECT_URI
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-okta-redirect-uri
            - name: AZURE_ACC_NAME
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-az-acc-name
            - name: AZURE_PRIMARY_KEY
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-az-primary-key
            - name: AZURE_CONTAINER
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-az-container
            - name: AZURE_ACCOUNT_SAS
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-az-acc-sas
            - name: REFRESH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-refresh-token-ui
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-client-id-ui
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-client-secret-ui
            - name: PROFILE_ID
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-profileid
            - name: ADVERTISER_ID
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-advertiserid
            - name: SHARED_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-shared-client-secret
            - name: TENET_ID
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-tenetid
            - name: CC_API_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-cc-api-clientid
            - name: CC_API_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-cc-api-client-secret
            - name: SUBSCRIPTION_ID
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-subscription-id
            - name: RESOURCE_GROUP
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-rg
            - name: DATA_FACTORY_NAME
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-adf
            - name: SERVER
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-sql-server
            - name: DATABASE
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-sql-db
            - name: DRIVER
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-sql-driver
            - name: OKTA_KEY
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-okta-key
            - name: OKTA_SECRET
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-okta-secret
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-sql-password
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-sql-uid
            - name: RECKITT_OKTA_API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: amc-dev-kv-secrets
                  key: sc-amc-dev-reckitt-okta-api-token
          livenessProbe:
            initialDelaySeconds: 50
            tcpSocket:
              port: 5000
          readinessProbe:
            initialDelaySeconds: 50
            tcpSocket:
              port: 5000
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "rbmatrixkv"
            nodePublishSecretRef:                       # Only required when using service principal mode
              name: secrets-store-creds                 
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}


